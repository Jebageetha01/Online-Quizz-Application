import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.EmptyBorder;

public class QuizApp extends JFrame {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private JLabel lblQuestion;
    private JRadioButton[] options;
    private ButtonGroup group;
    private JButton btnNext;
    private int score = 0;
    private int currentQuestionIndex = 0;

    // Array of questions, options, and correct answers
    private String[][] questions = {
        {"Which one of the following is not a data type?", "float", "Float", "char", "int", "1"},
        {"Which of the following is a valid keyword in Java?", "static", "String", "integer", "boolean", "0"},
        {"Which company developed Java?", "Microsoft", "Sun Microsystems", "Apple", "Google", "1"},
        {"Which method is used to find the length of a string in Java?", "length()", "size()", "getSize()", "count()", "0"},
        {"What is the default value of a boolean in Java?", "true", "false", "null", "0", "1"},
        {"Which of the following is not a Java feature?", "Object-oriented", "Platform independent", "Use of pointers", "Dynamic", "2"},
        {"Which memory area is used to store objects in Java?", "Stack", "Heap", "Array", "Static", "1"},
        {"Which operator is used to compare two values in Java?", "=", "==", "!=", "<>", "1"},
        {"Which exception is thrown when a divided by zero occurs?", "IOException", "ArithmeticException", "NullPointerException", "ClassCastException", "1"},
        {"Which keyword is used to inherit a class in Java?", "implements", "extends", "inherits", "instanceof", "1"}
    };

    public static void main(String[] args) {
        EventQueue.invokeLater(() -> {
            try {
                QuizApp frame = new QuizApp();
                frame.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    public QuizApp() {
        setTitle("Online Quiz");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 500, 400);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        setContentPane(contentPane);
        contentPane.setLayout(null);

        lblQuestion = new JLabel();
        lblQuestion.setFont(new Font("Times New Roman", Font.PLAIN, 16));
        lblQuestion.setBounds(50, 30, 400, 30);
        contentPane.add(lblQuestion);

        options = new JRadioButton[4];
        group = new ButtonGroup();
        for (int i = 0; i < 4; i++) {
            options[i] = new JRadioButton();
            options[i].setBounds(50, 80 + i * 40, 400, 30);
            group.add(options[i]);
            contentPane.add(options[i]);
        }

        btnNext = new JButton("Next");
        btnNext.setBounds(200, 300, 100, 30);
        contentPane.add(btnNext);

        loadQuestion();
        btnNext.addActionListener(e -> {
            if (checkAnswer()) {
                score++;
            }
            currentQuestionIndex++;
            if (currentQuestionIndex < questions.length) {
                loadQuestion();
            } else {
                showFinalScore();
            }
        });
    }
    private void loadQuestion() {
        group.clearSelection(); 
        String[] q = questions[currentQuestionIndex];
        lblQuestion.setText("Q" + (currentQuestionIndex + 1) + ": " + q[0]);
        for (int i = 0; i < 4; i++) {
            options[i].setText(q[i + 1]);
        }
    }
    private boolean checkAnswer() {
        String correctAnswerIndex = questions[currentQuestionIndex][5];
        for (int i = 0; i < options.length; i++) {
            if (options[i].isSelected() && String.valueOf(i).equals(correctAnswerIndex)) {
                return true;
            }
        }
        return false;
    }
    private void showFinalScore() {
        JOptionPane.showMessageDialog(this, "Quiz completed! Your final score is: " + score + "/" + questions.length);
        System.exit(0); 
    }
}
